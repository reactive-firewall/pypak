version: 2
jobs:
  build:
    docker:
      - image: cimg/python:3.11
    environment:
      CI: cicleci
      DEBIAN_FRONTEND: noninteractive
      LANG: en_US.UTF-8
      LC_CTYPE: en_EN.UTF-8
      SHELL: /bin/bash
    working_directory: ~/python-repo
    steps:
      - checkout
      - run:
          name: "fetch and pull"
          command: |
            git fetch && git pull --all || true
      - run:
          shell: /bin/bash
          name: "install depends attempt"
          command: |
            python3 -m pip install --user -r ./requirements.txt || true
          when: on_success
      - run:
          shell: /bin/bash
          name: "install coverage attempt"
          command: |
            python3 -m pip install --user coverage || true
      - run:
          name: "install flake8 attempt"
          command: |
            python3 -m pip install --user flake8 || true
          when: on_success
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/python-repo

  test:
    docker:
      - image: cimg/python:3.11
    parallelism: 1
    environment:
      CI: cicleci
      DEBIAN_FRONTEND: noninteractive
      LANG: en_US.UTF-8
      LC_CTYPE: en_EN.UTF-8
      SHELL: /bin/bash
    working_directory: ~/python-repo
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          shell: /bin/bash
          name: "clean up for test"
          command: |
            python3 -m pip install --user coverage || true
          when: on_success
      - run:
          shell: /bin/bash
          name: "clean up for test"
          command: |
            make clean
          when: always
      - run:
          shell: /bin/bash
          name: "Unit Tests"
          command: |
            make test
          when: on_success
      - run:
          shell: /bin/bash
          name: "clean up from test"
          command: |
            make clean
          when: always
      - run:
          shell: /bin/bash
          name: "clean up from FAIL"
          command: |
            make clean
          when: on_fail

  pytest:
    docker:
      - image: cimg/python:3.11
    parallelism: 2
    environment:
      CI: cicleci
      DEBIAN_FRONTEND: noninteractive
      LANG: en_US.UTF-8
      LC_CTYPE: en_EN.UTF-8
      SHELL: /bin/bash
    working_directory: ~/python-repo
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          shell: /bin/bash
          name: "clean up for test"
          command: |
            python3 -m pip install --user coverage || true
          when: on_success
      - run:
          shell: /bin/bash
          name: "setup up for pytest"
          command: |
            python3 -m pip install --user pytest || true
          when: on_success
      - run:
          shell: /bin/bash
          name: "clean up for pytest"
          command: |
            make clean
          when: always
      - run:
          shell: /bin/bash
          name: "pytest Unit Tests"
          command: |
            make test-pytest
          when: on_success
      - store_test_results:
          path: test-reports
          when: on_success
      - store_artifacts:
          path: test-reports
          when: on_success
      - run:
          shell: /bin/bash
          name: "clean up from pytest"
          command: |
            make clean
          when: always
      - run:
          shell: /bin/bash
          name: "clean up from FAIL"
          command: |
            make clean
          when: on_fail

  lint:
    docker:
      - image: cimg/python:3.11
    environment:
      CI: cicleci
      DEBIAN_FRONTEND: noninteractive
      LANG: en_US.UTF-8
      SHELL: /bin/bash
      LC_CTYPE: en_EN.UTF-8
    working_directory: ~/python-repo
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "install flake8 attempt"
          command: |
            python3 -m pip install --user flake8 || true
      - run:
          shell: /bin/bash
          name: "clean up for test"
          command: |
            make clean
      - run:
          shell: /bin/bash
          name: "check code style and spelling"
          command: |
            make test-style || python3 -m flake8 --ignore=W191,W391,E117 --max-line-length=100 --verbose --count --config=.flake8.ini --max-complexity=10
      - run:
          shell: /bin/bash
          name: "clean up when done"
          command: |
            make clean

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build
            - test
      - pytest:
          requires:
            - build
            - test
