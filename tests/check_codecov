#! /bin/bash
# Disclaimer of Warranties.
# A. YOU EXPRESSLY ACKNOWLEDGE AND AGREE THAT, TO THE EXTENT PERMITTED BY
#    APPLICABLE LAW, USE OF THIS SHELL SCRIPT AND ANY SERVICES PERFORMED
#    BY OR ACCESSED THROUGH THIS SHELL SCRIPT IS AT YOUR SOLE RISK AND
#    THAT THE ENTIRE RISK AS TO SATISFACTORY QUALITY, PERFORMANCE, ACCURACY AND
#    EFFORT IS WITH YOU.
#
# B. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SHELL SCRIPT
#    AND SERVICES ARE PROVIDED "AS IS" AND “AS AVAILABLE”, WITH ALL FAULTS AND
#    WITHOUT WARRANTY OF ANY KIND, AND THE AUTHOR OF THIS SHELL SCRIPT'S LICENSORS
#    (COLLECTIVELY REFERRED TO AS "THE AUTHOR" FOR THE PURPOSES OF THIS DISCLAIMER)
#    HEREBY DISCLAIM ALL WARRANTIES AND CONDITIONS WITH RESPECT TO THIS SHELL SCRIPT
#    SOFTWARE AND SERVICES, EITHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT
#    NOT LIMITED TO, THE IMPLIED WARRANTIES AND/OR CONDITIONS OF
#    MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A PARTICULAR PURPOSE,
#    ACCURACY, QUIET ENJOYMENT, AND NON-INFRINGEMENT OF THIRD PARTY RIGHTS.
#
# C. THE AUTHOR DOES NOT WARRANT AGAINST INTERFERENCE WITH YOUR ENJOYMENT OF THE
#    THE AUTHOR's SOFTWARE AND SERVICES, THAT THE FUNCTIONS CONTAINED IN, OR
#    SERVICES PERFORMED OR PROVIDED BY, THIS SHELL SCRIPT WILL MEET YOUR
#    REQUIREMENTS, THAT THE OPERATION OF THIS SHELL SCRIPT OR SERVICES WILL
#    BE UNINTERRUPTED OR ERROR-FREE, THAT ANY SERVICES WILL CONTINUE TO BE MADE
#    AVAILABLE, THAT THIS SHELL SCRIPT OR SERVICES WILL BE COMPATIBLE OR
#    WORK WITH ANY THIRD PARTY SOFTWARE, APPLICATIONS OR THIRD PARTY SERVICES,
#    OR THAT DEFECTS IN THIS SHELL SCRIPT OR SERVICES WILL BE CORRECTED.
#    INSTALLATION OF THIS THE AUTHOR SOFTWARE MAY AFFECT THE USABILITY OF THIRD
#    PARTY SOFTWARE, APPLICATIONS OR THIRD PARTY SERVICES.
#
# D. YOU FURTHER ACKNOWLEDGE THAT THIS SHELL SCRIPT AND SERVICES ARE NOT
#    INTENDED OR SUITABLE FOR USE IN SITUATIONS OR ENVIRONMENTS WHERE THE FAILURE
#    OR TIME DELAYS OF, OR ERRORS OR INACCURACIES IN, THE CONTENT, DATA OR
#    INFORMATION PROVIDED BY THIS SHELL SCRIPT OR SERVICES COULD LEAD TO
#    DEATH, PERSONAL INJURY, OR SEVERE PHYSICAL OR ENVIRONMENTAL DAMAGE,
#    INCLUDING WITHOUT LIMITATION THE OPERATION OF NUCLEAR FACILITIES, AIRCRAFT
#    NAVIGATION OR COMMUNICATION SYSTEMS, AIR TRAFFIC CONTROL, LIFE SUPPORT OR
#    WEAPONS SYSTEMS.
#
# E. NO ORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY THE AUTHOR
#    SHALL CREATE A WARRANTY. SHOULD THIS SHELL SCRIPT OR SERVICES PROVE DEFECTIVE,
#    YOU ASSUME THE ENTIRE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
#
#    Limitation of Liability.
# F. TO THE EXTENT NOT PROHIBITED BY APPLICABLE LAW, IN NO EVENT SHALL THE AUTHOR
#    BE LIABLE FOR PERSONAL INJURY, OR ANY INCIDENTAL, SPECIAL, INDIRECT OR
#    CONSEQUENTIAL DAMAGES WHATSOEVER, INCLUDING, WITHOUT LIMITATION, DAMAGES
#    FOR LOSS OF PROFITS, CORRUPTION OR LOSS OF DATA, FAILURE TO TRANSMIT OR
#    RECEIVE ANY DATA OR INFORMATION, BUSINESS INTERRUPTION OR ANY OTHER
#    COMMERCIAL DAMAGES OR LOSSES, ARISING OUT OF OR RELATED TO YOUR USE OR
#    INABILITY TO USE THIS SHELL SCRIPT OR SERVICES OR ANY THIRD PARTY
#    SOFTWARE OR APPLICATIONS IN CONJUNCTION WITH THIS SHELL SCRIPT OR
#    SERVICES, HOWEVER CAUSED, REGARDLESS OF THE THEORY OF LIABILITY (CONTRACT,
#    TORT OR OTHERWISE) AND EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE
#    POSSIBILITY OF SUCH DAMAGES. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION
#    OR LIMITATION OF LIABILITY FOR PERSONAL INJURY, OR OF INCIDENTAL OR
#    CONSEQUENTIAL DAMAGES, SO THIS LIMITATION MAY NOT APPLY TO YOU. In no event
#    shall THE AUTHOR's total liability to you for all damages (other than as may
#    be required by applicable law in cases involving personal injury) exceed
#    the amount of five dollars ($5.00). The foregoing limitations will apply
#    even if the above stated remedy fails of its essential purpose.
################################################################################

ulimit -t 1200
PATH="/bin:/sbin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:${PATH}"
LANG=${LANG:-"en_US"}
LC_ALL="${LANG:1:5}.utf-8"
umask 127

LOCK_FILE="${TMPDIR:-/tmp}/codecov_test_script_lock"
EXIT_CODE=0

test -x $(command -v grep) || exit 126 ;
test -x $(command -v curl) || exit 126 ;
test -x $(command -v gpgv) || exit 126 ;
test -x $(command -v shasum) || exit 126 ;

# sorry no windows support here
if [[ $( \uname -s ) == "Darwin" ]] ; then
	CI_OS="macos"
else
	CI_OS="linux"
fi

function cleanup() {
	rm -f ${LOCK_FILE} 2>/dev/null || true ; wait ;
	rm -f ./codecov 2>/dev/null || true ; wait ;
}

if [[ ( $(shlock -f ${LOCK_FILE} -p $$ ) -eq 0 ) ]] ; then
        trap 'cleanup ; wait ; exit 1 ;' SIGHUP || EXIT_CODE=3
        trap 'cleanup ; wait ; exit 1 ;' SIGTERM || EXIT_CODE=4
        trap 'cleanup ; wait ; exit 1 ;' SIGQUIT || EXIT_CODE=5
		# SC2173 - https://github.com/koalaman/shellcheck/wiki/SC2173
		# trap 'rm -f ${LOCK_FILE} 2>/dev/null || true ; wait ; exit 1 ;' SIGSTOP || EXIT_CODE=7
        trap 'cleanup ; wait ; exit 1 ;' SIGINT || EXIT_CODE=8
        trap 'cleanup ; wait ; exit 1 ;' SIGABRT || EXIT_CODE=9
        trap 'cleanup ; wait ; exit ${EXIT_CODE} ;' EXIT || EXIT_CODE=1
else
        echo "CodeCov already in progress by "`head ${LOCK_FILE}` ;
        false ;
        exit 126 ;
fi

# this is how test files are found:

# THIS IS THE ACTUAL TEST DIR USED (update _TEST_ROOT_DIR as needed)
_TEST_ROOT_DIR="./" ;
if [[ -d ./pypak ]] ; then
	_TEST_ROOT_DIR="./" ;
elif [[ -d ./tests ]] ; then
	_TEST_ROOT_DIR="./" ;
else
	echo "FAIL: missing valid folder or file"
	EXIT_CODE=1
fi

# This File  MUST BE GIT-IGNORED
# to be SAFELY USED to store Tokens and env vars (update logic as needed)
if [[ ( -r ./codecov_env ) ]] ; then
	source ./codecov_env 2>/dev/null || true ;
fi

if [[ ( -r ./codecov.yml ) ]] ; then
	cat codecov.yml | curl -X POST --data-binary @- https://codecov.io/validate 2>/dev/null || EXIT_CODE=6
fi
if [[ ( -r ./.codecov.yml ) ]] ; then
	cat ./.codecov.yml | curl -X POST --data-binary @- https://codecov.io/validate 2>/dev/null || EXIT_CODE=6
fi


#########################
# actual Work starts here
#########################
curl -fLso codecov https://uploader.codecov.io/latest/${CI_OS:-linux}/codecov ;
for i in 1 256 512 ; do
	curl -fLso codecov.SHA${i}SUM "https://uploader.codecov.io/latest/${CI_OS:-linux}/codecov.SHA${i}SUM" ; wait ;
	curl -fLso codecov.SHA${i}SUM.sig "https://uploader.codecov.io/latest/${CI_OS:-linux}/codecov.SHA${i}SUM.sig" ; wait ;
	# test sha1/sha512 signatures if found and sha256 even if not found
	if [[ ( -r codecov.SHA${i}SUM ) ]] || [[ ( ${i} -eq 256 ) ]] ; then
		if [[ ( -r codecov.SHA${i}SUM.sig ) ]] ; then
			# configure your CI evironment to trust the key at https://keybase.io/codecovsecurity/pgp_keys.asc
            # FP: 2703 4E7F DB85 0E0B BC2C 62FF 806B B28A ED77 9869
			# OR...
			# Set CI=true to continue on missing keys
			gpgv codecov.SHA${i}SUM.sig codecov.SHA${i}SUM || ${CI} || EXIT_CODE=126
			rm -vf codecov.SHA${i}SUM.sig 2>/dev/null ;
		fi
		shasum -a $i -c --ignore-missing codecov.SHA${i}SUM || EXIT_CODE=126
		rm -vf codecov.SHA${i}SUM 2>/dev/null ;
	fi
done

if [[ ( ${EXIT_CODE} -eq 0 ) ]] ; then
	chmod -v 751 ./codecov || EXIT_CODE=126
fi

if [[ ( -x $(command -v coverage3) ) ]] ; then
	coverage3 combine 2>/dev/null || true
	coverage3 xml 2>/dev/null || true
elif [[ ( -x $(command -v coverage) ) ]] ; then
	coverage combine 2>/dev/null || true
	coverage xml 2>/dev/null || true
fi

if [[ ( ${EXIT_CODE} -eq 0 ) ]] ; then
	./codecov -n "Custom Test Run" -X gcov -F pypak,${CI_OS:-linux}-latest -Z || EXIT_CODE=10 ;
fi


unset _TEST_ROOT_DIR 2>/dev/null || true ;

rm -f ./codecov 2>/dev/null > /dev/null || true ; wait ;
rm -f ${LOCK_FILE} 2>/dev/null > /dev/null || true ; wait ;

# goodbye
exit ${EXIT_CODE:-255} ;
